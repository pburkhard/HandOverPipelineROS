ros:
  node_name: "handover_pipeline"  # Name of the ROS node
  subscribed_topics:
    rgb_camera: "/camera/color/image_raw"  # Contains the rbgd image
    depth_camera: "/camera/aligned_depth_to_color/image_raw"  # Contains the depth image
    camera_info: "/camera/color/camera_info"  # Contains the camera info
    task: "/task"  # Contains information about the object and the task to be performed
    transform_robot_cam_to_selected_grasp: "/selected_grasp_marker"  # Contains the robot cam -> gripper transform
  published_topics:
    out_dir: "/out_dir"  # Contains the output directory path for saving results
    transform_base_to_gripper: "/target_tf"  # Contains the target base -> gripper transform
  frame_ids:
    base: "world"  # Frame ID for the robot base
    camera: "camera_color_optical_frame"  # Frame ID for the camera
    gripper: "selected_grasp"  # Frame ID for the gripper

grasp_generator_client:
  server_name: "grasp_generator"  # Name of the ROS service to call
  ros:
    timeout: 100  # Timeout for the service call in seconds

correspondence_estimator_client:
  server_name: "correspondence_estimator"  # Name of the ROS service to call
  ros:
    timeout: 100  # Timeout for the service call in seconds

hand_reconstructor_client:
  services:
    reconstruct_hand: "reconstruct_hand"  # Service to reconstruct the hand from a given image
    reconstruct_hand_pose: "reconstruct_hand_pose"  # Service to reconstruct the hand pose from a given image
    estimate_camera: "estimate_camera"  # Service to estimate the camera parameters
    render_hand: "render_hand"  # Service to render the reconstructed hand

transform_estimator_client:
  server_name: "transform_estimator"  # Name of the ROS service to call
  ros:
    timeout: 100  # Timeout for the service call in seconds

debug:
  # All output data will be saved in a folder in this base directory.
  out_dir: "/Handover_Pipeline/outputs/"
  # Directory from which example data will be loaded.
  example_dir: "/Handover_Pipeline/input/examples/01_bottle/"
  # If true, the configuration used for the pipeline will be logged.
  log_config: true
  # If true, intermediate results from the initialization phase will be saved to the output directory.
  log_init_results: true
  # If true, the target hand pose will be rendered in the object image for visualization..
  visualize_target_hand_pose: true
  # If true, the camera topic will not be subscribed to, and example data will be used instead.
  bypass_camera_subscriber: true
  # If true, the task topic will not be subscribed to, and example data will be used instead.
  bypass_task_subscriber: true
  # If true, the grasp generator will not be called, and example data will be used instead.
  bypass_grasp_generator: true
  # If true, the correspondence estimator will not be called, and example data will be used instead.
  bypass_correspondence_estimator: true
  # If true, the hand reconstructor will not be called, and example data will be used instead.
  bypass_hand_reconstructor: true
  # If true, the grasp -> object transform estimator will not be called, and example data will be used instead.
  bypass_transform_estimator: true
  # If true, the object -> gripper transform subscriber will not be used, and example data will be used instead.
  bypass_transform_subscriber: true
  # If true, the node will just run the initialization phase and exit.
  skip_main_loop: true