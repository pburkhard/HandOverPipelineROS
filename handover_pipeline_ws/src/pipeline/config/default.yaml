ros:
  node_name: "handover_pipeline"  # Name of the ROS node
  task_topic: "/task"  # Topic for the desciption of the intended task
  out_dir_topic: "/out_dir"  # Topic for the output directory of the pipeline

grasp_generator_client:
  server_name: "grasp_generator"  # Name of the ROS service to call
  ros:
    timeout: 100  # Timeout for the service call in seconds

correspondence_estimator_client:
  server_name: "correspondence_estimator"  # Name of the ROS service to call
  ros:
    timeout: 100  # Timeout for the service call in seconds

hand_reconstructor_client:
  server_name: "hand_reconstructor"  # Name of the ROS service to call
  ros:
    timeout: 100  # Timeout for the service call in seconds

transform_estimator_client:
  server_name: "transform_estimator"  # Name of the ROS service to call
  ros:
    timeout: 100  # Timeout for the service call in seconds

debug:
  # All output data will be saved in this directory.
  out_dir: "/Handover_Pipeline/outputs/"
  # Directory from which example data will be loaded.
  example_dir: "/Handover_Pipeline/input/examples/01_bottle/"
  # If true, the camera topic will not be subscribed to, and example data will be used instead.
  bypass_camera_subscriber: true
  # If true, the task topic will not be subscribed to, and example data will be used instead.
  bypass_task_subscriber: true
  # If true, the grasp generator will not be called, and example data will be used instead.
  bypass_grasp_generator: true
  # If true, the correspondence estimator will not be called, and example data will be used instead.
  bypass_correspondence_estimator: true
  # If true, the hand reconstructor will not be called, and example data will be used instead.
  bypass_hand_reconstructor: true
  # If true, the transform estimator will not be called, and example data will be used instead.
  bypass_transform_estimator: true